unit SolidAppleEdit;

interface

uses
  System.SysUtils, System.Classes, FMX.Types, FMX.Controls, FMX.Graphics,
  FMX.Effects, System.UITypes, AppleEdit;

type
  TSolidAppleEdit = class(TAppleEdit)
  private
    function GetFSelectedColor: TAlphaColor;
    procedure SetFSelectedColor(const Value: TAlphaColor);
    { Private declarations }
  protected
    { Protected declarations }
    FShadow: TShadowEffect;
    FStrokeGradientDefocus: TGradient;
    FFocusEffect: TGlowEffect;
    FSelectedTheme: TAlphaColor;

    { Events settings }
    procedure OnEditEnter(Sender: TObject); override;
    procedure OnEditExit(Sender: TObject); override;
  public
    { Public declarations }
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
    function ValidateText(): Boolean;
  published
    { Published declarations }
    property SelectedColor: TAlphaColor read GetFSelectedColor
      write SetFSelectedColor;
  end;

procedure Register;

implementation

procedure Register;
begin
  RegisterComponents('Componentes Customizados', [TSolidAppleEdit]);
end;

{ TSolidAppleEdit }

constructor TSolidAppleEdit.Create(AOwner: TComponent);
begin
  inherited;
  FDarkTheme := TAlphaColor($FF424242);
  FLightTheme := TAlphaColor($FFFFFFFF);
  FSelectedTheme := TAlphaColor($FF006CD0);

  FFocusEffect := TGlowEffect.Create(Self);
  Self.AddObject(FFocusEffect);
  FFocusEffect.Enabled := true;
  FFocusEffect.GlowColor := FSelectedTheme;
  FFocusEffect.Opacity := 0;
  FFocusEffect.Softness := 0.2;
  FFocusEffect.SetSubComponent(true);
  FFocusEffect.Stored := false;

  FBackground.Stroke.Kind := TBrushKind.Gradient;
  FBackground.Stroke.Thickness := 1;
  FBackground.Fill.Color := TAlphaColor($FFFFFFFF);

  FStrokeGradientDefocus := TGradient.Create;
  with FStrokeGradientDefocus do
  begin
    Color := $FFD2D2D2;
    Color1 := $FFBABABA;
  end;
  FBackground.Stroke.Gradient := FStrokeGradientDefocus;

  { Shadow }
  FShadow := TShadowEffect.Create(Self);
  FBackground.AddObject(FShadow);
  FShadow.Direction := 90;
  FShadow.Distance := 0.7;
  FShadow.Opacity := 0.1;
  FShadow.Softness := 0.1;
  FShadow.Enabled := true;
end;

destructor TSolidAppleEdit.Destroy;
begin
  if Assigned(FStrokeGradientDefocus) then
    FStrokeGradientDefocus.Free;
  if Assigned(FShadow) then
    FShadow.Free;
  if Assigned(FFocusEffect) then
    FFocusEffect.Free;
  inherited;
end;

procedure TSolidAppleEdit.OnEditEnter(Sender: TObject);
begin
  inherited;
  FFocusEffect.GlowColor := FSelectedTheme;
  FFocusEffect.AnimateFloat('Opacity', 0.8, 0.2);
end;

procedure TSolidAppleEdit.OnEditExit(Sender: TObject);
begin
  FFocusEffect.AnimateFloat('Opacity', 0, 0.2);
  inherited;
end;

function TSolidAppleEdit.GetFSelectedColor: TAlphaColor;
begin
  Result := FFocusEffect.GlowColor;
end;

procedure TSolidAppleEdit.SetFSelectedColor(const Value: TAlphaColor);
begin
  FFocusEffect.GlowColor := Value;
end;

function TSolidAppleEdit.ValidateText: Boolean;
begin
  if not Self.Validate then
  begin
    FFocusEffect.GlowColor := TAlphaColor($FFFF2929);
    if FFocusEffect.Opacity <> 0.6 then
      FFocusEffect.AnimateFloat('Opacity', 0.8, 0.2);
  end;
  Result := Self.Validate;
end;

end.
