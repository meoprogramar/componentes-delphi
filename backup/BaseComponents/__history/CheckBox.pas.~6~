unit CheckBox;

interface

uses
  System.SysUtils, System.Classes, FMX.Types, FMX.Controls, System.Types,
  FMX.Objects, FMX.StdCtrls, System.UITypes, FMX.Graphics, FMX.Dialogs, System.Math,
  System.Math.Vectors, FMX.Edit, FMX.Layouts, FMX.Effects;

type
  TCheckBox = class(TControl)
  private
    { Private declarations }
  protected
    { Protected declarations }
    FText: TLabel;
    FUncheckedIcon: TPath;
    FCheckedIcon: TPath;

    procedure Paint; override;
    procedure Resize; override;
    procedure Painting; override;
  public
    { Public declarations }
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
  published
    { Published declarations }
    property Align;
    property Anchors;
    property Enabled;
    property Height;
    property Opacity;
    property Visible;
    property Width;
    property Size;
    property Scale;
    property Margins;
    property Position;
    property RotationAngle;
    property RotationCenter;

    { Events }
    property OnPainting;
    property OnPaint;
    property OnResize;
  end;

procedure Register;

implementation

procedure Register;
begin
  RegisterComponents('Componentes Customizados', [TCheckBox]);
end;

{ TCheckBox }

constructor TCheckBox.Create(AOwner: TComponent);
begin
  inherited;
  Self.Width := 250;
  Self.Height := 30;

  FText := TLabel.Create(Self);
  Self.AddObject(FText);
  FText.Align := TAlignLayout.Client;
  FText.HitTest := False;
  FText.Margins.Left := 10;
  FText.StyledSettings := [];
  FText.TextSettings.Font.Size := 14;
  FText.TextSettings.Font.Family := 'SF Pro Display';
  FText.TextSettings.FontColor := TAlphaColor($FF323232);
  FText.Text := Self.Name;
  FText.SetSubComponent(True);
  FText.Stored := false;

  FUncheckedIcon := TPath.Create(self);
  Self.AddObject(FUncheckedIcon);
  FUncheckedIcon.Align := TAlignLayout.Left;
  FUncheckedIcon.WrapMode := TPathWrapMode.Fit;
  FUncheckedIcon.Fill.Color := TAlphaColor($FF757575);
  FUncheckedIcon.Stroke.Kind := TBrushKind.None;
  FUncheckedIcon.Width := 17;
  FUncheckedIcon.HitTest := False;

  FCheckedIcon := TPath.Create(self);
  FUncheckedIcon.AddObject(FCheckedIcon);
  FCheckedIcon.Align := TAlignLayout.Client;
  FCheckedIcon.WrapMode := TPathWrapMode.Fit;
  FCheckedIcon.Fill.Color := TAlphaColor($FF1867C0);
  FCheckedIcon.Stroke.Kind := TBrushKind.None;
  FCheckedIcon.Width := 17;
  FCheckedIcon.HitTest := False;
  FCheckedIcon.Visible := False;
end;

destructor TCheckBox.Destroy;
begin
  if Assigned(FCheckedIcon) then
    FCheckedIcon.Free;
  if Assigned(FUncheckedIcon) then
    FUncheckedIcon.Free;
  if Assigned(FText) then
    FText.Free;
  inherited;
end;

procedure TCheckBox.Paint;
begin
  inherited;

end;

procedure TCheckBox.Painting;
begin
  inherited;

end;

procedure TCheckBox.Resize;
begin
  inherited;

end;

end.
